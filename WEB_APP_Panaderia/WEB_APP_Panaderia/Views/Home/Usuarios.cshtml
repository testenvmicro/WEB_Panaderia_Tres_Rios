@model WEB_APP_Panaderia.Models.ViewModel

@{
    ViewData["Title"] = "Usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-wrapper">
    <div class="content">
        <div class="page-header">
            <div class="add-item d-flex">
                <div class="page-title">
                    <h4>Lista de Usuarios</h4>
                    <h6>Gestionar Usuarios</h6>
                </div>
            </div>
            <div class="page-btn">
                <a href="#" class="btn btn-added" data-bs-toggle="modal" data-bs-target="#add-units"><i data-feather="plus-circle" class="me-2"></i>Agregar Nuevo Usuario</a>
            </div>
        </div>

        <div class="card table-list-card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table datanew">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Correo</th>
                                <th>Estado</th>
                                <th>Rol</th>
                                <th>Nombre</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.Usuarios)
                            {
                                <tr>
                                    <td>@user.idUsuario</td>
                                    <td>@user.correo</td>
                                    <td>@user.estado</td>
                                    <td>@user.idRol</td>
                                    <td>@user.nombre</td>
                                    <td class="action-table-data">
                                        <div class="edit-delete-action">
                                            <a class="me-2 p-2 mb-0" href="javascript:void(0);" onclick="cargarDatosUsuario(@user.idUsuario)" data-bs-toggle="modal" data-bs-target="#edit-units">
                                                <i data-feather="edit" class="feather-edit"></i>
                                            </a>
                                            @if (user.estado == 1)
                                            {
                                                <a class="me-2 p-2 mb-0" href="javascript:void(0);" onclick="desactivarUsuario(@user.idUsuario)">
                                                    <i data-feather="toggle-left" class="feather-trash-2"></i>
                                                </a>
                                            }
                                            else
                                            {
                                            <a class="me-2 p-2 mb-0" href="javascript:void(0);" onclick="desactivarUsuario(@user.idUsuario)">
                                                    <i data-feather="toggle-right" class="feather-edit"></i>
                                            </a>
                                            
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal para agregar usuario -->
<div class="modal fade" id="add-units" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("RegistrarUsuarios", "Usuarios", FormMethod.Post, new { @class = "pt-3", @id = "addUsuarioForm" }))
            {
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Agregar Usuario</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <div class="mb-3">
                        <label for="nombre" class="form-label">Nombre</label>
                        @Html.TextBoxFor(model => model.Usuario.nombre, new { @class = "form-control", @required = "required" })
                    </div>
                    <div class="mb-3">
                        <label for="correo" class="form-label">Correo</label>
                        @Html.TextBoxFor(model => model.Usuario.correo, new { @class = "form-control", @required = "required", @type = "email" })
                    </div>
                    <div class="mb-3">
                        <label for="contrasenna" class="form-label">Contraseña</label>
                        @Html.PasswordFor(model => model.Usuario.contrasenna, new { @class = "form-control", @required = "required" })
                    </div>
                    <div class="mb-3">
                        <label for="confirmarContrasenna" class="form-label">Confirmar Contraseña</label>
                        <input type="password" class="form-control" id="confirmarContrasenna" required>
                    </div>
                    <div class="mb-3">
                        <label for="idRol" class="form-label">Rol</label>
                        @Html.DropDownListFor(model => model.Usuario.idRol, new SelectList(Model.Roles, "idRol", "descripcion"), "Seleccione un rol", new { @class = "form-control", @required = "required" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal para editar usuario -->
<div class="modal fade" id="edit-units" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("ActualizarUsuario", "Usuarios", FormMethod.Post, new { @class = "pt-3", @id = "editUsuarioForm" }))
            {
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Editar Usuario</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="editIdUsuario" name="idUsuario" />
                    <div class="mb-3">
                        <label for="editNombre" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="editNombre" name="nombre" required />
                    </div>
                    <div class="mb-3">
                        <label for="editCorreo" class="form-label">Correo</label>
                        <input type="email" class="form-control" id="editCorreo" name="correo" required />
                    </div>
                    <div class="mb-3">
                        <label for="editContrasenna" class="form-label">Contraseña</label>
                        <input type="password" class="form-control" id="editContrasenna" name="contrasenna" />
                    </div>
                    <div class="mb-3">
                        <label for="editIdRol" class="form-label">Rol</label>
                        <select class="form-control" id="editIdRol" name="idRol" required>
                            @foreach (var rol in Model.Roles)
                            {
                                <option value="@rol.idRol">@rol.descripcion</option>
                            }
                        </select>
                    </div>
                    
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        window.cargarDatosUsuario = function (idUsuario) {
            $.ajax({
                url: '@Url.Action("GetUsuarioById", "Usuarios")',
                type: 'GET',
                data: { id: idUsuario },
                success: function (data) {
                    console.log("Datos recibidos:", data);
                    $('#editIdUsuario').val(data.idUsuario);
                    $('#editNombre').val(data.nombre);
                    $('#editCorreo').val(data.correo);
                    $('#editIdRol').val(data.idRol);
                    $('#editEstado').prop('checked', data.estado);
                    $('#editContrasenna').val(data.contrasenna); // Limpiar el campo de contraseña
                    $('#edit-units').modal('show');
                },
                error: function (error) {
                    console.log('Error al cargar los datos del usuario:', error);
                }
            });

        }
    </script>
    <script>
        $(document).ready(function () {
            $('#addUsuarioForm').on('submit', function (e) {
                var contrasenna = $('#Usuario_contrasenna').val();
                var confirmarContrasenna = $('#confirmarContrasenna').val();

                if (contrasenna !== confirmarContrasenna) {
                    e.preventDefault();
                    Swal.fire({
                        title: '¡Error!',
                        text: 'Las contraseñas no coinciden. Por favor, intente de nuevo.',
                        icon: 'error',
                        confirmButtonText: 'Entendido'
                    });
                    return false;
                }
            });
        });
    </script>
    <script>
            $(document).ready(function () {
                $('#addUsuarioForm').submit(function (e) {
                    e.preventDefault();
                    $.ajax({
                        url: '@Url.Action("RegistrarUsuarios", "Usuarios")',
                        type: 'POST',
                        data: $(this).serialize(),
                        success: function (data) {
                            if (data.success) {
                                location.reload();
                            } else {
                                alert(data.message);
                            }
                        }
                    });
                });

                $(document).ready(function () {
                    $('#editUsuarioForm').submit(function (e) {
                        e.preventDefault();
                        var formData = $(this).serializeArray();

                        // Convertir el valor del checkbox a 1 o 0
                        var estadoField = formData.find(field => field.name === 'estado');
                        if (estadoField) {
                            estadoField.value = $('#editEstado').is(':checked') ? 1 : 0;
                        } else {
                            formData.push({ name: 'estado', value: $('#editEstado').is(':checked') ? 1 : 0 });
                        }

                        $.ajax({
                            url: '@Url.Action("ActualizarUsuario", "Usuarios")',
                            type: 'POST',
                            data: $.param(formData),
                            success: function (result) {
                                $('#edit-units').modal('hide');
                                location.reload();
                            },
                            error: function (error) {
                                console.log('Error al actualizar el usuario:', error);
                                alert('Error al actualizar el usuario. Por favor, intente de nuevo.');
                            }
                        });
                    });
                });
                </script>

    <script>
        window.desactivarUsuario = function (idUsuario) {
            $.ajax({
                url: '@Url.Action("DesactivarUsuario", "Usuarios")',
                type: 'POST',
                data: { idUsuario: idUsuario },
                success: function (data) {
                    if (data.success) {
                        Swal.fire({
                            title: '¡Éxito!',
                            text: 'El usuario ha sido desactivado correctamente.',
                            icon: 'success',
                            timer: 2000,
                            timerProgressBar: true,
                            showConfirmButton: false
                        }).then((result) => {
                            if (result.dismiss === Swal.DismissReason.timer) {
                                location.reload();
                            }
                        });
                    } else {
                        Swal.fire({
                            title: '¡Error!',
                            text: 'Error al desactivar el usuario: ' + data.message,
                            icon: 'error',
                            timer: 3000,
                            timerProgressBar: true,
                            showConfirmButton: false
                        });
                    }
                },
                error: function (error) {
                    console.log('Error al desactivar el usuario:', error);
                    Swal.fire({
                        title: '¡Error!',
                        text: 'Ha ocurrido un error al intentar desactivar el usuario.',
                        icon: 'error',
                        timer: 3000,
                        timerProgressBar: true,
                        showConfirmButton: false
                    });
                }
            });
        }
    </script>

}
<!-- jQuery -->
<script src="assets/js/jquery-3.7.1.min.js"></script>

<!-- Feather Icon JS -->
<script src="assets/js/feather.min.js"></script>

<!-- Slimscroll JS -->
<script src="assets/js/jquery.slimscroll.min.js"></script>

<!-- Datatable JS -->
<script src="assets/js/jquery.dataTables.min.js"></script>
<script src="assets/js/dataTables.bootstrap5.min.js"></script>

<!-- Datetimepicker JS -->
<script src="assets/js/moment.min.js"></script>
<script src="assets/js/bootstrap-datetimepicker.min.js"></script>

<!-- Bootstrap Core JS -->
<script src="assets/js/bootstrap.bundle.min.js"></script>

<!-- Select2 JS -->
<script src="assets/plugins/select2/js/select2.min.js"></script>

<!-- Sweetalert 2 -->
<script src="assets/plugins/sweetalert/sweetalert2.all.min.js"></script>
<script src="assets/plugins/sweetalert/sweetalerts.min.js"></script>

<!-- Custom JS --><script src="assets/js/theme-script.js"></script>
<script src="assets/js/script.js"></script>

<script src="assets/plugins/sweetalert/sweetalert2.all.min.js"></script>
<script src="assets/plugins/sweetalert/sweetalerts.min.js"></script>